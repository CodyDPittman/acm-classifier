plugins{
	id 'java'
	id "com.github.spotbugs" version "5.0.6"
	id 'edu.odu.cs.report_accumulator' version '1.4'
}

spotbugsMain {
    ignoreFailures = true
    effort = 'max'
    reportLevel = 'medium'
    reports {
       xml.enabled = false
       html.enabled = true
    }
}

spotbugsTest.enabled = false

reportStats {
    reportsURL = 'https://codydpittman.github.io/acm-classifier/reports'
    htmlSourceDir = file('src/main/html')  // default value
    reportsDir = file('build/reports') // default value
    buildID = "12345"                  // defaults to current date, but can be any run identifier
}

java {
	sourceCompatibility = JavaVersion.toVersion(11)
	targetCompatibility = JavaVersion.toVersion(11)
}

repositories {
	mavenCentral()
}

dependencies {
	testImplementation 'org.junit.jupiter:junit-jupiter:5.7.0'
	testImplementation 'org.hamcrest:hamcrest-library:2.2'
	implementation 'org.apache.tika:tika-core:2.5.0'
    implementation 'org.apache.tika:tika-parsers-standard-package:2.5.0'


}

test {
	ignoreFailures = true
	useJUnitPlatform()
}


task clearPages(type: Delete) {
    delete 'build/gh-pages'
}

task clonePages() {
    doLast {
        def thisRepo = rootProject.projectDir.toString()
        def pagesDir = "$buildDir/gh-pages"
        mkdir pagesDir
        project.delete {
            delete pagesDir
        }
        exec {
            workingDir = '.'
            commandLine = ['git', 'clone', 'file://' + thisRepo, '-b', 'gh-pages', pagesDir]
        }
    }
}

task copyReports (dependsOn: ['reports','clonePages']) {
    doLast {
    	def pagesDir = "$buildDir/gh-pages"
        ant.copy (todir: pagesDir) {
            fileset(dir: 'build/reports')
        }
    }
}

task updateGHPages (dependsOn: 'copyReports') {
    group = "Reporting"
    description  'Copies reports to the gh-pages branch in preparation for a future push to GitHub'
    doLast {
        def pagesDir = "$buildDir/gh-pages"
        exec {
            workingDir = pagesDir
            commandLine = ['git', 'add', '.']
        }
        exec {
            workingDir = pagesDir
            commandLine = ['git', 'commit', '-m', 'Updating-webpages']
        }
        exec {
            workingDir = pagesDir
            commandLine = ['git', 'push']
        }
    }
}

task reports (type: Copy){
	from 'build/docs'
	into 'build/reports/javadoc'
	from 'src/main/html'
	into 'build/reports'
	from '../report_accumulator/build/reports'
	into 'build/reports'
	
	dependsOn 'javadoc', 'test', ':report_accumulator:reports'
}

task deployReports (type: Copy){
	
	from 'build/reports'
	into 'build/gh-pages'
	
	dependsOn 'reports', 'copyReports'
} 